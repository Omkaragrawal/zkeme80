: STAGE4-START
." Stage 4 loaded." CR
." A menu demo is loading." CR
;

: STAGE4-END
  STATUS  
  ." The system is going
to shutdown!"
  SHUTDOWN
;
STAGE4-START
\ Simple grid menu system demo.

\ Make a grid of cells.
: GRID ( width height "name" -- )
  CREATE  OVER ,  * CELLS ALLOT
  DOES> ( x y -- addr ) DUP CELL+ >R  @ * + CELLS R> +
;

\ Grid parameters.
2 CONSTANT ROWS
2 CONSTANT COLUMNS

\ The contents of the menu choices should be pointers to menu entry
\ structures.
ROWS COLUMNS GRID MENU-ENTRIES

\ Menu entry structures contain pointers to routines that draw the
\ selection and deselection updates, and what the menu entry should do
\ when it's clicked through.
BEGIN-STRUCTURE MENU-ENTRY
  FIELD: MENU-ENTRY.SELECTOR
  FIELD: MENU-ENTRY.DESELECTOR
  FIELD: MENU-ENTRY.ON-CLICK
END-STRUCTURE

: NEW-MENU-ENTRY ( x y [parse: "name"] -- )
  MENU-ENTRIES \ addr to write to
  HERE DUP MENU-ENTRY ALLOT CREATE
  ['] LIT , , ['] EXIT ,
  SWAP !
;

VARIABLE XPOS
VARIABLE YPOS
ROWS    1- CONSTANT MENU-MAX-X
COLUMNS 1- CONSTANT MENU-MAX-Y

: INC! 1 SWAP +! ;
: DEC! 1 SWAP -! ;

: INC-XPOS XPOS INC! ;
: INC-YPOS YPOS INC! ;

: DEC-XPOS XPOS @ IF XPOS DEC! THEN ;
: DEC-YPOS YPOS @ IF YPOS DEC! THEN ;

: NORMALIZE-X XPOS @ MENU-MAX-X MIN XPOS ! ;
: NORMALIZE-Y YPOS @ MENU-MAX-Y MIN YPOS ! ;
: NORMALIZE-POS NORMALIZE-X NORMALIZE-Y ;

\ Takes and arrow key and updates XPOS and YPOS.
: UPDATE-XY ( arrow-key -- )
  CASE
    RIGHT OF INC-XPOS ENDOF
    LEFT  OF DEC-XPOS ENDOF
    UP    OF INC-YPOS ENDOF
    DOWN  OF DEC-YPOS ENDOF
  ENDCASE
  NORMALIZE-POS
;

0 0 NEW-MENU-ENTRY TOP-LEFT
1 0 NEW-MENU-ENTRY TOP-RIGHT
0 1 NEW-MENU-ENTRY BOTTOM-LEFT
1 1 NEW-MENU-ENTRY BOTTOM-RIGHT

: DRAW-XOR-SQUARE ( x y size -- ) DUP RECT-XOR ;

: DRAW-AND-SQUARE ( x y size -- ) DUP RECT-AND ;

: DRAW-SQUARE ( x y size -- ) DUP RECT-OR ;

: DRAW-SQUARE-WITH-BORDER ( x y size border -- )
  \ Draw the default box
  2OVER 2OVER DROP DRAW-SQUARE
  \ Double the border and subtract from the size.
  \ ( x y size' )
  2* - ROT 1+ ROT 1+ ROT DRAW-AND-SQUARE
;

20 CONSTANT BUTTON-SIZE
1  CONSTANT BORDER-SIZE

: DRAW-SELECTED-BUTTON BUTTON-SIZE DRAW-SQUARE ;
: DRAW-DESELECTED-BUTTON BUTTON-SIZE BORDER-SIZE DRAW-SQUARE-WITH-BORDER ;

: TOP-LEFT-SELECT 20 10 DRAW-SELECTED-BUTTON ;
: TOP-LEFT-DESELECT 20 10 DRAW-DESELECTED-BUTTON ;

: TOP-RIGHT-SELECT 45 10 DRAW-SELECTED-BUTTON ;
: TOP-RIGHT-DESELECT 45 10 DRAW-DESELECTED-BUTTON ;

: BOTTOM-LEFT-SELECT 20 35 DRAW-SELECTED-BUTTON ;
: BOTTOM-LEFT-DESELECT 20 35 DRAW-DESELECTED-BUTTON ;

: BOTTOM-RIGHT-SELECT 45 35 DRAW-SELECTED-BUTTON ;
: BOTTOM-RIGHT-DESELECT 45 35 DRAW-DESELECTED-BUTTON ;

: SET-MENU-ENTRY-SELECTOR MENU-ENTRY.SELECTOR ' SWAP ! ;
: SET-MENU-ENTRY-DESELECTOR MENU-ENTRY.DESELECTOR ' SWAP ! ;

TOP-LEFT SET-MENU-ENTRY-SELECTOR TOP-LEFT-SELECT
TOP-LEFT SET-MENU-ENTRY-DESELECTOR TOP-LEFT-DESELECT

BOTTOM-LEFT SET-MENU-ENTRY-SELECTOR BOTTOM-LEFT-SELECT
BOTTOM-LEFT SET-MENU-ENTRY-DESELECTOR BOTTOM-LEFT-DESELECT

TOP-RIGHT SET-MENU-ENTRY-SELECTOR TOP-RIGHT-SELECT
TOP-RIGHT SET-MENU-ENTRY-DESELECTOR TOP-RIGHT-DESELECT

BOTTOM-RIGHT SET-MENU-ENTRY-SELECTOR BOTTOM-RIGHT-SELECT
BOTTOM-RIGHT SET-MENU-ENTRY-DESELECTOR BOTTOM-RIGHT-DESELECT

\ What's the current menu c.
: CURRENT-MENU-ENTRY ( -- ) XPOS @ YPOS @ MENU-ENTRIES @ ;
\ Given a pointer to a menu entry, run its selector if it's not null.
: ?RUN-SELECTOR ( menu-entry -- ) ?DUP IF MENU-ENTRY.SELECTOR @ EXECUTE THEN ;
\ Given a pointer to a menu entry, run its deselector if it's not null.
: ?RUN-DESELECTOR ( menu-entry -- ) ?DUP IF MENU-ENTRY.DESELECTOR @ EXECUTE THEN ;

\ Deselect the previous menu entry.
: DESELECT-PREV ( -- ) CURRENT-MENU-ENTRY ?RUN-DESELECTOR ;
\ Deselect the specified entry at (x, y).
: DESELECT-ENTRY ( x y -- ) MENU-ENTRIES @ ?RUN-DESELECTOR ;
\ Run the selector at the current menu choice.
: DRAW-TICK     ( -- ) CURRENT-MENU-ENTRY ?RUN-SELECTOR ;
\ Is n an arrow key?
: ARROW-KEY?    ( n -- b ) 1 4 WITHIN ;
\ Block until an arrow key is read.
: GET-ARROW-KEY ( -- k ) BEGIN KEY DUP ARROW-KEY? IF EXIT THEN DROP AGAIN ;
\ One tick of the menu demo.
: MENU-DEMO-TICK ( -- ) GET-ARROW-KEY DESELECT-PREV UPDATE-XY DRAW-TICK ;
\ Draw the menu deselected.
: DRAW-ENTRIES-DESELECTED ( -- ) ROWS 0 DO COLUMNS 0 DO I J DESELECT-ENTRY LOOP LOOP ;
\ Initialize the current x and y.
: INIT-XY ( -- ) 0 XPOS ! 0 YPOS ! ;
\ The demo.
: MENU-DEMO ( -- ) DRAW-ENTRIES-DESELECTED INIT-XY BEGIN MENU-DEMO-TICK AGAIN ;

PAGE
MENU-DEMO

\ MENU-DEMO-TICK

\ If the user did a key action and the cursor doesn't correspond to
\ a menu entry (i.e. value = 0), then we loop

STAGE4-END
